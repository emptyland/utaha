local builder = utaha.uiBuilder
local alignment = utaha.alignment
local R = utaha.R

local mainMenu = builder:beginFlatMenuGroup("main-menu")
    :beginColumn("File", 1)
        :addItem("Tile", R.ID_FILE_TILE, nil)
        :addItem("Spirit", R.ID_FILE_SPIRIT, nil)
        :addItem("Map", R.ID_FILE_MAP, nil)
        :addDiv()
        :addItem("Save All", R.ID_FILE_SAVE_ALL, nil)
    :endColumn()
    :beginColumn("Tile", 2)
        :addItem("New Tile", R.ID_TILE_NEW, nil)
        :addItem("Commit Tile", R.ID_TILE_COMMIT, nil)
        :addDiv()
        :addItem("Next Tile", R.ID_TILE_NEXT, nil)
        :addItem("Prev Tile", R.ID_TILE_PREV, nil)
    :endColumn()
    :beginColumn("Spirit", 3)
        :addItem("Add Regular", R.ID_SPIRIT_ADD_REGULAR, nil)
        :addDiv()
        :addItem("Next Spirit", R.ID_SPIRIT_NEXT, nil)
        :addItem("Prev Spirit", R.ID_SPIRIT_PREV, nil)
    :endColumn()
    :beginColumn("Map", 4)
        :addItem("New Map", R.ID_MAP_NEW, nil)
        :addItem("Commit Map", R.ID_MAP_COMMIT, nil)
        :addItem("Delete Map", R.ID_MAP_DELETE, nil)
        :addDiv()
        :addItem("Next Map", R.ID_MAP_NEXT, nil)
        :addItem("Prev Map", R.ID_MAP_PREV, nil)
    :endColumn()
:endMenuGroup()

local statusBar = builder:beginFlatStatusBar("main-status-bar")
    :h(22)
    :addGrid(70)
        :text("Ready") -- [0]
    :endGrid()
    :addGrid(120)
        :text("----") -- [1]
    :endGrid()
    :addGrid(120)
        :text("----") -- [2]
    :endGrid()
    :addGrid(240)
        :text("----") -- [3]
    :endGrid()  
:endStatusBar()

--------------------------------------------------------------------------------

local picGridSelector = builder:beginPicGridSelector("grid-selector")
    :cmdId(R.ID_SELECTOR_SELECTED)
    :gridSizeW(48)
    :gridSizeH(64)
:endPicGridSelector()

local gridSizeWInputBox = builder:beginFlatInputBox("grid-size-w-input")
    :text(48)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local gridSizeHInputBox = builder:beginFlatInputBox("grid-size-h-input")
    :text(64)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local unselectBtn = builder:beginFlatButton("selector-unselect")
    :text("Unselect")
    :cmdId(R.ID_SELECTOR_UNSELECT)
    :h(26)
    :w(80)
:endButton()

local rightLayout = builder:beginLayout()
    :paddingSize(1)
    :verticalAlignment(alignment.ALIGN_LEFT_OR_TOP)
    :horizontalAligment(alignment.ALIGN_RIGHT_OR_BOTTOM)
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "W:"))
        :add(gridSizeWInputBox)
        :add(builder:flatLabel("l", "H:"))
        :add(gridSizeHInputBox)
        :add(unselectBtn)
    :endRow()
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(picGridSelector)
    :endRow()
:endLayout()

--------------------------------------------------------------------------------

local tileId = builder:beginFlatInputBox("tile-id")
    :text('0')
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

-- clipping
local tileClipping = builder:beginFlatInputBox("tile-clipping")
    :text('0')
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local tileLayout = builder:beginLayout()
    :paddingSize(1)
    :verticalAlignment(alignment.ALIGN_LEFT_OR_TOP)
    :horizontalAligment(alignment.ALIGN_LEFT_OR_TOP)
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "Tile ID:"))
        :add(tileId)
        :add(builder:flatLabel("l", "Clipping: "))
        :add(tileClipping)
    :endRow()
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "Pass Mask:"))
        :add(builder:beginFlatCheckBox("walk-pass")
            :label("Walk")
            :value(true)
        :endCheckBox())
        :add(builder:beginFlatCheckBox("fly-pass")
            :label("Fly")
            :value(true)
        :endCheckBox())
        :add(builder:beginFlatCheckBox("bullet-pass")
            :label("Bullet")
            :value(true)
        :endCheckBox())
        :add(builder:beginFlatCheckBox("magic-pass")
            :label("Magic")
            :value(true)
        :endCheckBox())
    :endRow()
    :beginRow(alignment.ALIGN_CENTER)
        :add(builder:flatPicView("picked-grid"))
    :endRow()
:endLayout()

--------------------------------------------------------------------------------

local spiritId = builder:beginFlatInputBox("spirit-id")
    :text(0)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local spiritName = builder:beginFlatInputBox("spirit-name")
    :text("[unnamed]")
    :maxInput(100)
    :h(26)
    :w(120)
:endInputBox()

local animatedSpeed = builder:beginFlatInputBox("animated-speed")
    :text(1000)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local spiritView = builder:beginAnimatedAvatarView("spirit-view")
    :viewW(48)
    :viewH(64)
    :animatedSpeed(100)
:endAnimatedAvatarView()

local spiritLayout = builder:beginLayout()
    :paddingSize(1)
    :verticalAlignment(alignment.ALIGN_LEFT_OR_TOP)
    :horizontalAligment(alignment.ALIGN_LEFT_OR_TOP)
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "Spirit ID:"))
        :add(spiritId)
        :add(builder:flatLabel("l", "Spirit Name: "))
        :add(spiritName)
        :add(builder:flatLabel("l", "Animated Speed: "))
        :add(animatedSpeed)
    :endRow()
    :beginRow(alignment.ALIGN_CENTER)
        :add(spiritView)
    :endRow()
:endLayout()

--------------------------------------------------------------------------------

local mapId = builder:beginFlatInputBox("map-id")
    :text(0)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local mapName = builder:beginFlatInputBox("map-name")
    :text("[unnamed]")
    :maxInput(100)
    :h(26)
    :w(120)
:endInputBox()

local tileW = builder:beginFlatInputBox("tile-w")
    :text(48)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local tileH = builder:beginFlatInputBox("tile-h")
    :text(48)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local maxHTiles = builder:beginFlatInputBox("max-h-tiles")
    :text(32)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local maxVTiles = builder:beginFlatInputBox("max-v-tiles")
    :text(32)
    :maxInput(100)
    :h(26)
    :w(60)
:endInputBox()

local mapView = builder:beginTerrainView("map-view")
    :cmdId(R.ID_TERRAIN_VIEW)
    :hasRuler(true)
    :tileW(48)
    :tileH(48)
    :viewPortHTiles(19)
    :viewPortVTiles(12)
:endTerrainView()

local mapLayout = builder:beginLayout()
    :paddingSize(1)
    :verticalAlignment(alignment.ALIGN_LEFT_OR_TOP)
    :horizontalAligment(alignment.ALIGN_CENTER)
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "Map ID:"))
        :add(mapId)
        :add(builder:flatLabel("l", "Map Name:"))
        :add(mapName)
        :add(builder:flatLabel("l", "Tile W: "))
        :add(tileW)
        :add(builder:flatLabel("l", "Tile H: "))
        :add(tileH)
    :endRow()
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:flatLabel("l", "Max H Tiles: "))
        :add(maxHTiles)
        :add(builder:flatLabel("l", "Max V Tiles: "))
        :add(maxVTiles)
    :endRow()
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(mapView)
    :endRow()
    :beginRow(alignment.ALIGN_LEFT_OR_TOP)
        :add(builder:beginFlatTextBox("picked-tile-detail")
            :w(240)
            :h(120)
        :endTextBox())
        :add(builder:flatPicView("picked-tile"))
    :endRow()
:endLayout()

return {
    mainMenu     = mainMenu,
    statusBar    = statusBar,
    rightLayout  = rightLayout,
    tileLayout   = tileLayout,
    spiritLayout = spiritLayout,
    mapLayout    = mapLayout,
}